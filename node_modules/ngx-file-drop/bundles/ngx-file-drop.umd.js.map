{"version":3,"file":"ngx-file-drop.umd.js.map","sources":["ng://ngx-file-drop/src/lib/ngx-drop/upload-file.model.ts","ng://ngx-file-drop/src/lib/ngx-drop/upload-event.model.ts","ng://ngx-file-drop/src/lib/ngx-drop/file-drop.component.ts","ng://ngx-file-drop/src/lib/ngx-drop/file-drop.module.ts"],"sourcesContent":["import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nexport class UploadFile {\r\n    constructor(\r\n        public relativePath: string,\r\n        public fileEntry: FileSystemEntry) {\r\n    }\r\n}\r\n","import { UploadFile } from './upload-file.model';\r\n\r\nexport class UploadEvent {\r\n    constructor(\r\n        public files: UploadFile[]) {\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, NgZone, OnDestroy, Renderer } from '@angular/core';\r\nimport { timer, Subscription } from 'rxjs';\r\n\r\nimport { UploadFile } from './upload-file.model';\r\nimport { UploadEvent } from './upload-event.model';\r\nimport { FileSystemFileEntry, FileSystemEntryMetadata, FileSystemEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n@Component({\r\n  selector: 'file-drop',\r\n  templateUrl: './file-drop.component.html',\r\n  styleUrls: ['./file-drop.component.scss']\r\n})\r\n\r\n\r\nexport class FileComponent implements OnDestroy {\r\n\r\n  @Input()\r\n  headertext: string = '';\r\n  @Input()\r\n  customstyle: string = null;\r\n  @Input()\r\n  disableIf: boolean = false;\r\n\r\n  @Output()\r\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\r\n  @Output()\r\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output()\r\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  stack = [];\r\n  files: UploadFile[] = [];\r\n  subscription: Subscription;\r\n  dragoverflag: boolean = false;\r\n\r\n  globalDisable: boolean = false;\r\n  globalStart: Function;\r\n  globalEnd: Function;\r\n\r\n  numOfActiveReadEntries = 0\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private renderer: Renderer\r\n  ) {\r\n    if (!this.customstyle) {\r\n      this.customstyle = 'drop-zone';\r\n    }\r\n    this.globalStart = this.renderer.listen('document', 'dragstart', (evt) => {\r\n      this.globalDisable = true;\r\n    });\r\n    this.globalEnd = this.renderer.listen('document', 'dragend', (evt) => {\r\n      this.globalDisable = false;\r\n    });\r\n  }\r\n\r\n  public onDragOver(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (!this.dragoverflag) {\r\n        this.dragoverflag = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public onDragLeave(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (this.dragoverflag) {\r\n        this.dragoverflag = false;\r\n        this.onFileLeave.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  dropFiles(event: any) {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      this.dragoverflag = false;\r\n      event.dataTransfer.dropEffect = 'copy';\r\n      let length;\r\n      if (event.dataTransfer.items) {\r\n        length = event.dataTransfer.items.length;\r\n      } else {\r\n        length = event.dataTransfer.files.length;\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        let entry: FileSystemEntry;\r\n        if (event.dataTransfer.items) {\r\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\r\n          }\r\n        } else {\r\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\r\n          }\r\n        }\r\n        if (!entry) {\r\n          const file: File = event.dataTransfer.files[i];\r\n          if (file) {\r\n            const fakeFileEntry: FileSystemFileEntry = {\r\n              name: file.name,\r\n              isDirectory: false,\r\n              isFile: true,\r\n              file: (callback: (filea: File) => void): void => {\r\n                callback(file)\r\n              }\r\n            }\r\n            const toUpload: UploadFile = new UploadFile(fakeFileEntry.name, fakeFileEntry);\r\n            this.addToQueue(toUpload);\r\n          }\r\n        } else {\r\n          if (entry.isFile) {\r\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\r\n            this.addToQueue(toUpload);\r\n          } else if (entry.isDirectory) {\r\n            this.traverseFileTree(entry, entry.name);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.preventAndStop(event);\r\n\r\n      const timerObservable = timer(200, 200);\r\n      this.subscription = timerObservable.subscribe(t => {\r\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n          this.onFileDrop.emit(new UploadEvent(this.files));\r\n          this.files = [];\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private traverseFileTree(item: FileSystemEntry, path: string) {\r\n\r\n    if (item.isFile) {\r\n      const toUpload: UploadFile = new UploadFile(path, item);\r\n      this.files.push(toUpload);\r\n      this.zone.run(() => {\r\n        this.popToStack();\r\n      });\r\n    } else {\r\n      this.pushToStack(path);\r\n      path = path + '/';\r\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\r\n      let entries = [];\r\n      const thisObj = this;\r\n\r\n      const readEntries = function () {\r\n        thisObj.numOfActiveReadEntries++\r\n        dirReader.readEntries(function (res) {\r\n          if (!res.length) {\r\n            // add empty folders\r\n            if (entries.length === 0) {\r\n              const toUpload: UploadFile = new UploadFile(path, item);\r\n              thisObj.zone.run(() => {\r\n                thisObj.addToQueue(toUpload);\r\n              });\r\n            } else {\r\n              for (let i = 0; i < entries.length; i++) {\r\n                thisObj.zone.run(() => {\r\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\r\n                });\r\n              }\r\n            }\r\n            thisObj.zone.run(() => {\r\n              thisObj.popToStack();\r\n            });\r\n          } else {\r\n            // continue with the reading\r\n            entries = entries.concat(res);\r\n            readEntries();\r\n          }\r\n          thisObj.numOfActiveReadEntries--\r\n        });\r\n      };\r\n\r\n      readEntries();\r\n    }\r\n  }\r\n\r\n  private addToQueue(item: UploadFile) {\r\n    this.files.push(item);\r\n  }\r\n\r\n  pushToStack(str) {\r\n    this.stack.push(str);\r\n  }\r\n\r\n  popToStack() {\r\n    const value = this.stack.pop();\r\n  }\r\n\r\n  private clearQueue() {\r\n    this.files = [];\r\n  }\r\n\r\n  private preventAndStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.globalStart();\r\n    this.globalEnd();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {FileComponent} from './file-drop.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileComponent,\r\n  ],\r\n  exports: [FileComponent],\r\n  imports: [],\r\n  providers: [],\r\n  bootstrap: [FileComponent],\r\n})\r\nexport class FileDropModule {}\r\n"],"names":["EventEmitter","timer","Component","NgZone","Renderer","Input","Output","NgModule"],"mappings":"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"}
